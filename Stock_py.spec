# -*- mode: python ; coding: utf-8 -*-


block_cipher = None

py_files = [
    'Program.py',
    'Global\\Value\\MoneyManageParam.py',
    'Global\\Value\\TechToolParam.py',
    'Global\\Value\\UniversalValue.py',
    'Layout\\SubLayout\\BacktestPofo\\BacktestPofoPage.py',
    'Layout\\SubLayout\\Entrymanagement\\EntmanagementPage.py',
    'Layout\\SubLayout\\info\\CompanyOfficersPage.py',
    'Layout\\SubLayout\\info\\LongBusSumPage.py',
    'Layout\\SubLayout\\matplotlib\\plt.py',
    'Layout\\SubLayout\\Mmanagement\\MmanagementPage.py',
    'Layout\\SubLayout\\Search\\SearchSymbol.py',
    'Layout\\SubLayout\\Ta\\lib\\Cycle\\ht_dcperiod.py',
    'Layout\\SubLayout\\Ta\\lib\\Cycle\\ht_dcphase.py',
    'Layout\\SubLayout\\Ta\\lib\\Cycle\\ht_phasor.py',
    'Layout\\SubLayout\\Ta\\lib\\Cycle\\ht_sine.py',
    'Layout\\SubLayout\\Ta\\lib\\Cycle\\ht_trendmode.py',
    'Layout\\SubLayout\\Ta\\lib\\Math_Operator\\math_operator.py',
    'Layout\\SubLayout\\Ta\\lib\\Math_Teansform\\math_teansform.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\adx.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\adxr.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\apo.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\aroon.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\aroonosc.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\bop.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\cci.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\cmo.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\dx.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\kdj.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\macd.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\macdext.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\macdfix.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\mfi.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\minus_di.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\minus_dm.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\mom.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\plus_di.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\plus_dm.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\ppo.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\roc.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\rocp.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\rocr.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\rocr100.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\rsi.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\stoch.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\stochf.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\stochrsi.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\trix.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\ultosc.py',
    'Layout\\SubLayout\\Ta\\lib\\Momentum\\willr.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\bbands.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\dema.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\ema.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\ht_trendline.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\kama.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\ma.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\mama.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\mavp.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\midpoint.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\midprice.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\sar.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\sarext.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\sma.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\t3.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\tema.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\trima.py',
    'Layout\\SubLayout\\Ta\\lib\\Overlap_Studies\\wma.py',
    'Layout\\SubLayout\\Ta\\lib\\Price_Transform\\price_transform.py',
    'Layout\\SubLayout\\Ta\\lib\\Volatility_Indicator\\atr.py',
    'Layout\\SubLayout\\Ta\\lib\\Volatility_Indicator\\natr.py',
    'Layout\\SubLayout\\Ta\\lib\\Volatility_Indicator\\trange.py',
    'Layout\\SubLayout\\Ta\\lib\\Volume_Indicator\\ad.py',
    'Layout\\SubLayout\\Ta\\lib\\Volume_Indicator\\adosc.py',
    'Layout\\SubLayout\\Ta\\lib\\Volume_Indicator\\obv.py',
    'Layout\\SubLayout\\Techanalysis\\TechanalysisPage.py',
    'Layout\\Method_Class\\backtrade.py',
    'Layout\\Ui_Layout\\Entrymanagement\\Ui_entrymanagement.py',
    'Layout\\Ui_Layout\\Info\\Ui_companyOfficers.py',
    'Layout\\Ui_Layout\\Info\\Ui_longbussum.py',
    'Layout\\Ui_Layout\\Moneymanagement\\Ui_moneymanagement.py',
    'Layout\\Ui_Layout\\TechAnalysis\\Ui_techanalysisindicatorsTool.py',
    'Layout\\Ui_Layout\\Ui_Backtest_Pofo\\Ui_pofo_data.py',
    'Layout\\Ui_Layout\\Ui_main.py'
]

pathex_link = [
    'D:\\Python\\Stock_py'
]


add_files = [
    ('D:\\Python\\Stock_py\\coding.ico', 'images')
]

a = Analysis(
    py_files,
    pathex=pathex_link,
    binaries=[],
    datas=[],
    hiddenimports=[
        'PyQt6',
        'PyQt6-Qt6',
        'PyQt6-sip',
        'json',
        'TA-Lib',
        'talib',
        'talib.stream',
        'numba',
        'numpy',
        'plotly',
        'pandas',
        'vectorbt',
        'yfinance',
        'matplotlib',
        'matplotlib-inline',
        'matplotlib.pyplot',
        'mplfinance',
        'sklearn.utils._cython_blas',
        'sklearn.neighbors.typedefs',
        'sklearn.neighbors.quad_tree',
        'sklearn.tree._utils',
        'sklearn.neighbors._typedefs',
        'sklearn.utils._typedefs',
        'sklearn.neighbors._partition_nodes'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)
pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='Stock_Analysis',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=False,
    console=False,
    icon='D:\\Python\\Stock_py\\coding.ico',
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
)
coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=False,
    upx_exclude=[],
    name='Stock_py',
)
